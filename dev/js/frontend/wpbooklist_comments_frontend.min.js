/**
 * JavaScript Admin Functions - wpbooklist-comments-frontend.min.js
 *
 * @author   Jake Evans
 * @category JavaScript
 * @package  Includes/Assets/Js
 * @version  6.0.0
 */

console.log( 'This is the JavaScript Object that holds all PHP Variables for use in JavaScript' );
console.log( wpbooklistCommentsPhpVariables );


// All functions wrapped in jQuery(document ).ready()...
jQuery( document ).ready( function( $ ) {
	'use strict';

	/* BEGINNING SECTION TO CALL ALL FUNCTIONS IN FILE... */

	// Function to allow the visitor to 'Like' a Comment and to increment the 'Like' count in the DB.
	wpbooklistCommentsLikeButton();

	// Function to allow the visitor to submit a new comment.
	wpbooklistCommentsSubmit();

	// Function that allows the user to log in from the Comments section.
	wpbooklistCommentsLogIn();

	// Function that allows the user to register from the Comments section.
	wpbooklistCommentsRegister();

	/* ENDING SECTION TO CALL ALL FUNCTIONS IN FILE... */

	// Function that allows the user to log in from the Comments section.
	function wpbooklistCommentsLogIn() {

		$( document ).on( 'click', '.wpbooklist-comments-login-submit-button', function( event ) {

			$( '#wpbooklist-colorbox-comments-response-div' ).text( '' );
			$( '#wpbooklist-spinner-comments' ).animate({'opacity': '1'});

			var request = '';
			var username = $( '#wpbooklist-comments-login-username-actual' ).val();
			var password = $( '#wpbooklist-comments-login-password-actual' ).val();

			var data = {
				'action': 'wpbooklist_comments_login_action',
				'security': wpbooklistCommentsPhpVariables.adminnonce8,
				'username': username,
				'password': password
			};

			console.log(data);

			request = $.ajax({
				url: ajaxurl,
				type: 'POST',
				data: data,
				timeout: 0,
				success: function( response ) {
					console.log(response);

					if ( '' === response ) {

						$( '.wpbooklist-comments-login-username-actual' ).attr( 'disabled', true );
						$( '.wpbooklist-comments-login-username-actual' ).css({'opacity': '0.5'});
						$( '#wpbooklist-colorbox-comments-response-div' ).text( wpbooklistCommentsPhpVariables.trans75 );

						setTimeout(function(){
							document.location.reload( true );
						}, 3000)

					} else {

						$( '#wpbooklist-colorbox-comments-response-div' ).text( wpbooklistCommentsPhpVariables.trans76 );

					}

					$( '#wpbooklist-spinner-comments' ).animate({'opacity': '0'});

				},
				error: function( jqXHR, textStatus, errorThrown ) {
					console.log( errorThrown );
					console.log( textStatus );
					console.log( jqXHR );
				}
			});
		});
	}

	// Function that allows the user to register from the Comments section.
	function wpbooklistCommentsRegister() {

		$( document ).on( 'click', '.wpbooklist-comments-register-submit-button', function( event ) {

			var responsediv = $( '#wpbooklist-colorbox-comments-register-response-div' );
			var request = '';
			var username = $( '#wpbooklist-comments-register-username-actual' ).val();
			var verifyusername = $( '#wpbooklist-comments-register-usernameverify-actual' ).val();
			var password = $( '#wpbooklist-comments-register-password-actual' ).val();
			var verifypassword = $( '#wpbooklist-comments-register-passwordverify-actual' ).val();

			responsediv.css({'color': 'initial'});
			responsediv.text( '' );
			$( '#wpbooklist-colorbox-comments-register-response-div' ).text( '' );
			$( '#wpbooklist-spinner-comments-register' ).animate({'opacity': '1'});


			// Make checks for blank fields.
			if ( '' === username ) {
				responsediv.css({'color': 'red'});
				responsediv.text( wpbooklistCommentsPhpVariables.trans86 );
				$( '#wpbooklist-spinner-comments-register' ).animate({'opacity': 0});
				return false;
			}
			if ( '' === verifyusername ) {
				responsediv.css({'color': 'red'});
				responsediv.text( wpbooklistCommentsPhpVariables.trans87 );
				$( '#wpbooklist-spinner-comments-register' ).animate({'opacity': 0});
				return false;
			}
			if ( '' === password ) {
				responsediv.css({'color': 'red'});
				responsediv.text( wpbooklistCommentsPhpVariables.trans88 );
				$( '#wpbooklist-spinner-comments-register' ).animate({'opacity': 0});
				return false;
			}
			if ( '' === verifypassword ) {
				responsediv.css({'color': 'red'});
				responsediv.text( wpbooklistCommentsPhpVariables.trans89 );
				$( '#wpbooklist-spinner-comments-register' ).animate({'opacity': 0});
				return false;
			}

			// Now make checks for matching values.
			if ( username !== verifyusername ) {
				responsediv.css({'color': 'red'});
				responsediv.text( wpbooklistCommentsPhpVariables.trans90 );
				$( '#wpbooklist-spinner-comments-register' ).animate({'opacity': 0});
				return false;
			}

			// Now make checks for matching values.
			if ( password !== verifypassword ) {
				responsediv.css({'color': 'red'});
				responsediv.text( wpbooklistCommentsPhpVariables.trans91 );
				$( '#wpbooklist-spinner-comments-register' ).animate({'opacity': 0});
				return false;
			}


			var data = {
				'action': 'wpbooklist_comments_register_action',
				'security': wpbooklistCommentsPhpVariables.adminnonce9,
				'username': username,
				'password': password
			};

			console.log(data);

			request = $.ajax({
				url: ajaxurl,
				type: 'POST',
				data: data,
				timeout: 0,
				success: function( response ) {
					console.log(response);

					if ( 'Username Exists' === response ) {
						console.log('Username Exists');
						responsediv.css({'color': 'red'});
						responsediv.text( wpbooklistCommentsPhpVariables.trans92 );
						$( '#wpbooklist-spinner-comments-register' ).animate({'opacity': 0});
						return false;
					}

					if ( 'E-Mail Exists' === response ) {
						console.log('E-Mail Exists')
						responsediv.css({'color': 'red'});
						responsediv.text( wpbooklistCommentsPhpVariables.trans92 );
						$( '#wpbooklist-spinner-comments-register' ).animate({'opacity': 0});
						return false;
					}

					if ( 'Success all around!' === response ) {
						responsediv.text( wpbooklistCommentsPhpVariables.trans93 );
						$( '#wpbooklist-spinner-comments-register' ).animate({'opacity': 0});
						

						setTimeout( function(){
							document.location.reload( true );
						}, 4000 );
					}





					$( '#wpbooklist-spinner-comments' ).animate({'opacity': '0'});

				},
				error: function( jqXHR, textStatus, errorThrown ) {
					console.log( errorThrown );
					console.log( textStatus );
					console.log( jqXHR );
				}
			});
		});
	}

	// Function to allow the visitor to 'Like' a Comment and to increment the 'Like' count in the DB.
	function wpbooklistCommentsLikeButton() {

		$( document ).on( 'click', '.wpbooklist-comments-likes-thumb-img-wrapper', function( event ) {

			var newlikes  = 0;
			var commentid = '';
			var request = '';
			var bookuid = $( this ).attr( 'data-bookuid' );

			// Dim and disable the like button, and get the attributes needed to update the DB.
			$(this).css({ 'opacity': '0.5', 'pointer-events': 'none' });
			commentid = $( this ).attr( 'data-commentid' );

			// Increment the Like number.
			newlikes  = parseInt(  $(this).attr( 'data-likes' ) ) + 1 ;

			// Display the new Like number.
			$(this).next( '.wpbooklist-comments-total-likes-p' ).text( newlikes  + ' ' + wpbooklistCommentsPhpVariables.trans36 );

			var data = {
				'action': 'wpbooklist_comments_like_action',
				'security': wpbooklistCommentsPhpVariables.adminnonce1,
				'commentid': commentid,
				'newlikes': newlikes,
				'bookuid': bookuid
			};

			console.log(data);

			request = $.ajax({
				url: ajaxurl,
				type: 'POST',
				data: data,
				timeout: 0,
				success: function( response ) {
					console.log(response);
				},
				error: function( jqXHR, textStatus, errorThrown ) {
					console.log( errorThrown );
					console.log( textStatus );
					console.log( jqXHR );
				}
			});


		});

	}

	// Function to allow the visitor to submit a new comment.
	function wpbooklistCommentsSubmit() {

		$( document ).on( 'click', '.wpbooklist-comments-add-comment-submit-button', function( event ) {

			$( '#wpbooklist-spinner-comments' ).animate({'opacity': '1'});

			var request = '';
			var bookid  = $( this ).attr( 'data-bookid' );
			var booktitle = $( this ).attr( 'data-title' );
			var bookuid = $( this ).attr( 'data-bookuid' );
			var library = $( this ).attr( 'data-library' );
			var rating = $( '#wpbooklist-comments-add-comment-rating-actual' ).val();
			var commentactual = $( '#wpbooklist-comments-add-comment-actual' ).val();
			var newcommenthtml = '';
			var ratingImg = '';

			var data = {
				'action': 'wpbooklist_comments_submit_action',
				'security': wpbooklistCommentsPhpVariables.adminnonce2,
				'bookid': bookid,
				'booktitle': booktitle,
				'bookuid': bookuid,
				'library': library,
				'rating': rating,
				'commentactual': commentactual,
			};

			console.log(data);

			request = $.ajax({
				url: ajaxurl,
				type: 'POST',
				data: data,
				timeout: 0,
				success: function( response ) {

					$( '#wpbooklist-spinner-comments' ).animate({'opacity': '0'});

					response = response.split( '-' );

					if ( '1' === response[0] ) {

						// Disable and dim the submit button.
						$( '.wpbooklist-comments-add-comment-submit-button' ).attr( 'disabled', true );
						$( '.wpbooklist-comments-add-comment-submit-button' ).css({'opacity': '0.5'});


						// If admin has settings set to autoamtically approve comments, otherwise...
						if ( 'approved' === response[1] ) {

							$( '#wpbooklist-colorbox-comments-response-div' ).text( wpbooklistCommentsPhpVariables.trans65 );

						} else {

							$( '#wpbooklist-colorbox-comments-response-div' ).text( wpbooklistCommentsPhpVariables.trans94 );

						}




					}

					console.log(response);
				},
				error: function( jqXHR, textStatus, errorThrown ) {
					console.log( errorThrown );
					console.log( textStatus );
					console.log( jqXHR );
				}
			});

			console.log('fdsaclicked!!!)');
		});

	}


});
